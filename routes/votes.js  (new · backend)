// routes/votes.js — handles voting and comments for artists

const express = require('express');
const router = express.Router();
const VotesService = require('../services/votesService');

// POST /votes/:artistId → cast a vote
router.post('/:artistId', async (req, res) => {
  try {
    const { artistId } = req.params;
    const { user } = req.body; // optional: could be userId/email if logged in
    const result = await VotesService.castVote(artistId, user);
    res.json({ success: true, vote: result });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
});

// GET /votes/:artistId → get all votes for an artist
router.get('/:artistId', async (req, res) => {
  try {
    const { artistId } = req.params;
    const votes = await VotesService.getVotes(artistId);
    res.json({ success: true, votes });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
});

// POST /votes/:artistId/comments → add a comment
router.post('/:artistId/comments', async (req, res) => {
  try {
    const { artistId } = req.params;
    const { user, text } = req.body;
    const comment = await VotesService.addComment(artistId, user, text);
    res.json({ success: true, comment });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
});

// GET /votes/:artistId/comments → list comments
router.get('/:artistId/comments', async (req, res) => {
  try {
    const { artistId } = req.params;
    const comments = await VotesService.getComments(artistId);
    res.json({ success: true, comments });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
});

module.exports = router;